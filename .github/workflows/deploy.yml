name: Deploy to EC2

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install

      - name: Test application
        run: |
          node -e "console.log('✅ Application test passed')"

      - name: Check if app.js exists
        run: |
          if [ -f "app.js" ]; then
            echo "✅ app.js found"
          else
            echo "❌ app.js not found"
            exit 1
          fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."

            # Navigate to project directory
            cd /home/ec2-user/AWS-Node

            # Backup current version
            echo "📦 Creating backup..."
            cd ..
            if [ -d "AWS-Node" ]; then
              cp -r AWS-Node AWS-Node-backup-$(date +%Y%m%d-%H%M%S)
              echo "✅ Backup created successfully"
            else
              echo "⚠️ No existing AWS-Node directory to backup"
            fi
            cd AWS-Node

            # Pull latest changes
            echo "⬇️ Pulling latest changes..."
            git pull origin main

            # Install dependencies
            echo "📦 Installing dependencies..."
            npm install

            # Create logs directory with proper permissions
            mkdir -p logs || sudo mkdir -p logs
            chmod 755 logs || sudo chmod 755 logs

            # Test the application locally
            echo "🧪 Testing application..."
            node -e "console.log('✅ Local test passed')"

            # Restart with PM2
            echo "🔄 Restarting application..."
            if pm2 list | grep -q "Weather-App"; then
              pm2 restart Weather-App
            else
              echo "🚀 Starting new PM2 process..."
              if [ -f "ecosystem.config.js" ]; then
                pm2 start ecosystem.config.js --env production
              else
                pm2 start app.js --name "Weather-App"
              fi
            fi

            # Wait a moment for the app to start
            sleep 5

            # Check if deployment was successful
            echo "🔍 Verifying deployment..."
            # Wait a bit more for the app to fully start
            sleep 10

            # Try multiple health check attempts
            for i in {1..3}; do
              echo "🔍 Health check attempt $i/3..."
              if curl -f http://localhost:3000/health > /dev/null 2>&1; then
                echo "✅ Deployment successful!"
                echo "🌐 Application is running at: http://${{ secrets.EC2_HOST }}"
                break
              else
                echo "⚠️ Health check attempt $i failed, waiting..."
                sleep 5
              fi
            done

            if ! curl -f http://localhost:3000/health > /dev/null 2>&1; then
              echo "❌ Deployment failed, rolling back..."
              cd ..
              if [ -d "AWS-Node-backup-*" ]; then
                rm -rf AWS-Node
                mv AWS-Node-backup-* AWS-Node
                cd AWS-Node
                if pm2 list | grep -q "Weather-App"; then
                  pm2 restart Weather-App
                else
                  if [ -f "ecosystem.config.js" ]; then
                    pm2 start ecosystem.config.js --env production
                  else
                    pm2 start app.js --name "Weather-App"
                  fi
                fi
              else
                echo "⚠️ No backup found, cannot rollback"
              fi
              echo "🔄 Rollback completed"
              exit 1
            fi

            # Show PM2 status
            echo "📊 PM2 Status:"
            pm2 status

            # Show recent logs
            echo "📋 Recent logs:"
            pm2 logs Weather-App --lines 10

            # Show process info
            echo "🔍 Process information:"
            ps aux | grep node
            netstat -tlnp | grep :3000 || echo "No process listening on port 3000"

            # Save PM2 configuration for startup
            pm2 save
            pm2 startup

            echo "🎉 Deployment completed successfully!"
